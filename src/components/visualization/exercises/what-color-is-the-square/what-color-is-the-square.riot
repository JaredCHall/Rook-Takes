<what-color-is-the-square style="text-align:center;">
    <h1>What Color Is the Square</h1>

    <div class="column square-name" if={!state.isAnswered}>
        { state.square }
    </div>
    <div class="row" style=" align-items: center; width:120rem" if={state.isAnswered}>
        <div class="column correct-answer" if={state.isAnswerCorrect}>
            !!
        </div>
        <div class="column wrong-answer" if={!state.isAnswerCorrect}>
            ??
        </div>
        <div class="column">
            <chessboard selected-square={state.square}></chessboard>
        </div>
    </div>

    <div class="column prompt" if={!state.isAnswered}>
        <button class="button button-white" onclick={() => answerQuestion('white')}>It's white</button>
        <button class="button button-black" onclick={() => answerQuestion('black')}>It's black</button>
    </div>

    <div class="column result" if="{state.isAnswered}">
        <button class="button margin-top2" onclick={() => askQuestion()}>Go Again!</button>
    </div>


    <script lang="ts">
        import ChessGamePosition from "ChessGamePosition";
        import Chessboard from "Chessboard/chessboard.riot"

        import {withTypes} from "riot";
        import {
            WhatColorIsTheSquareComponent
        } from "Visualization/exercises/what-color-is-the-square/what-color-is-the-square.d.ts";

        // noinspection TypeScriptValidateTypes
        export default withTypes<WhatColorIsTheSquareComponent>({
            components: {
                Chessboard,
            },
            state: {
                isAnswered: false,
                expectedAnswer: null,
                isAnswerCorrect: null,
                square: null,
            },
            onMounted() {
              this.askQuestion()
            },
            askQuestion() {

                const squareAddress = Math.floor(Math.random() * ChessGamePosition.squareNames.length);
                const squareName = ChessGamePosition.squareNames[squareAddress];
                const squareColor = ChessGamePosition.squareColors[squareAddress] === 0 ? 'white' : 'black';

                this.update({
                    isAnswered: false,
                    expectedAnswer: squareColor,
                    square: squareName,
                })

            },
            answerQuestion(answer) {
                this.update({
                    isAnswered: true,
                    isAnswerCorrect: answer === this.state.expectedAnswer
                })
            },
        })
    </script>

    <style>

        div.square-name {
            font-size: 20rem;
        }

        div.prompt button {
            margin-left: 2rem;
        }
        div.result button {
            margin-left: 2rem;
        }

        div.result span {
            display:inline-block;
            padding: 1rem 2rem;
            font-weight: bolder;
            font-size: 2rem;

        }

        .correct-answer {
            color: greenyellow;
            font-size: 40rem;
        }

        .wrong-answer {
            color: indianred;
            font-size: 40rem;
        }

    </style>

</what-color-is-the-square>